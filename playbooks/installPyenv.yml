---
- name: (Play Name) Install pyenv
  hosts: test

  vars_files:
    - installPyenv_vars.yml

  pre_tasks:
    - name: Update apt cache if needed.
      apt:
        update_cache: true
        autoremove: yes
        autoclean: yes
        force_apt_get: yes
        cache_valid_time: 3600
      become: yes

    # - name: Upgrade apt if needed.
    #   apt:
    #     upgrade: dist
    #     force_apt_get: yes
    #   become: yes

  tasks:
    - name: Install latest build tools if not already
      apt:
        name: 
          - git
          - make
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - curl
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libffi-dev
          - liblzma-dev
          - python-openssl
        state: latest
        update_cache: true
      become: yes

    - name: Download installer for Pyenv
      get_url:
        url: https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer
        dest: "{{ PYENV_EXE_DOWNLOAD_FILE }}"
        mode: 0744

    - name: Install Pyenv
      ansible.builtin.shell: "source {{ PYENV_EXE_DOWNLOAD_FILE }}"
      args:
        executable: /bin/bash
        removes: "{{ PYENV_EXE_DOWNLOAD_FILE }}"
        creates: "{{ ansible_env.HOME }}/.pyenv"

    # - name: Install pyenv-virtualenv plugin
    #   git:
    #     repo: https://github.com/yyuu/pyenv-virtualenv.git
    #     dest: "{{ ansible_env.HOME }}/.pyenv/plugins/pyenv-virtualenv"

    - name: Add path etc to .bashrc.
      lineinfile:
        dest: "{{ ansible_env.HOME }}/.bashrc"
        state: present
        create: yes
        line: "{{ item }}"
      with_items:
        - 'export PYENV_ROOT="$HOME/.pyenv"'
        - 'export PATH="$PYENV_ROOT/bin:$PATH"'
        - 'eval "$(pyenv init -)"'
        - 'eval "$(pyenv virtualenv-init -)"'

    - name: Ensure Pyenv is installed
      stat:
        path: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv"
      register: pyenv_data

    - name: Report if pyenv does not exist
      debug:
        msg: "The pyenv not found"
      when: not pyenv_data.stat.exists

    - name: Check is Pyenv command installed
      shell: "command -v {{ ansible_env.HOME }}/.pyenv/bin/pyenv >/dev/null 2>&1"
      register: is_pyenv_exist
      ignore_errors: yes

    - name: Report if pyenv does not exist
      debug:
        msg: "The pyenv not found"
      when: not is_pyenv_exist

    - name: Install Python {{ PYTHON_VERSION }}
      ansible.builtin.shell: |
        {{ ansible_env.HOME }}/.pyenv/bin/pyenv install {{ PYTHON_VERSION }} && \
        {{ ansible_env.HOME }}/.pyenv/bin/pyenv global {{ PYTHON_VERSION }}

      args:
        executable: "/bin/bash"
        creates: "{{ ansible_env.HOME }}/.pyenv/versions/{{PYTHON_VERSION}}"

